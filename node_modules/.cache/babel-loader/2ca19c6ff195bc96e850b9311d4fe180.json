{"ast":null,"code":"var _jsxFileName = \"/Users/belka/Desktop/React/IndigenousPeoplesRussia/src/components/PeoplesMapStart.jsx\";\nimport React from \"react\";\nimport { useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport { GeoJSON } from \"react-leaflet\";\nimport * as myConstClass from \"./constants.js\";\nimport nations from \"../data/nations.json\";\nexport default function PeoplesMapStart() {\n  var HighlightFeature = function HighlightFeature(layer) {\n    layer.setStyle({\n      weight: 1.5,\n      dashArray: \"\",\n      fillOpacity: 0.8\n    });\n\n    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n      layer.bringToFront();\n    }\n  };\n\n  var geoJsonRef = useRef();\n\n  var ResetHighlight = function ResetHighlight(layer) {\n    geoJsonRef.current.resetStyle(layer);\n  };\n\n  var Select = function Select(layer) {\n    if (selected !== null) {\n      var previous = selected;\n    }\n\n    layer.setStyle({\n      weight: 3,\n      color: \"white\",\n      fillOpacity: 1\n    });\n    selected = layer;\n\n    if (previous) {\n      ResetHighlight(previous);\n    }\n  };\n\n  var onEachFeatureF = function onEachFeatureF(feature, layer) {\n    layer.on({\n      mouseover: function mouseover(e) {\n        HighlightFeature(e.target);\n      },\n      mouseout: function mouseout(e) {\n        ResetHighlight(e.target);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GeoJSON, {\n    data: nations,\n    style: myConstClass.subteStyle,\n    onEachFeature: onEachFeatureF,\n    ref: geoJsonRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  });\n}","map":{"version":3,"sources":["/Users/belka/Desktop/React/IndigenousPeoplesRussia/src/components/PeoplesMapStart.jsx"],"names":["React","useRef","useState","L","GeoJSON","myConstClass","nations","PeoplesMapStart","HighlightFeature","layer","setStyle","weight","dashArray","fillOpacity","Browser","ie","opera","edge","bringToFront","geoJsonRef","ResetHighlight","current","resetStyle","Select","selected","previous","color","onEachFeatureF","feature","on","mouseover","e","target","mouseout","subteStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAO,KAAKC,YAAZ,MAA8B,gBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,eAAe,SAASC,eAAT,GAA2B;AAExC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAEhCA,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,MAAM,EAAE,GADK;AAEbC,MAAAA,SAAS,EAAE,EAFE;AAGbC,MAAAA,WAAW,EAAE;AAHA,KAAf;;AAKA,QAAI,CAACV,CAAC,CAACW,OAAF,CAAUC,EAAX,IAAiB,CAACZ,CAAC,CAACW,OAAF,CAAUE,KAA5B,IAAqC,CAACb,CAAC,CAACW,OAAF,CAAUG,IAApD,EAA0D;AACxDR,MAAAA,KAAK,CAACS,YAAN;AACD;AACF,GAVH;;AAYA,MAAMC,UAAU,GAAGlB,MAAM,EAAzB;;AAEA,MAAMmB,cAAc,GAAG,SAAjBA,cAAiB,CAACX,KAAD,EAAW;AAE9BU,IAAAA,UAAU,CAACE,OAAX,CAAmBC,UAAnB,CAA8Bb,KAA9B;AAEH,GAJD;;AAMA,MAAMc,MAAM,GAAG,SAATA,MAAS,CAACd,KAAD,EAAW;AACxB,QAAIe,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAIC,QAAQ,GAAGD,QAAf;AACD;;AACDf,IAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,MAAAA,MAAM,EAAE,CADK;AAEbe,MAAAA,KAAK,EAAE,OAFM;AAGbb,MAAAA,WAAW,EAAE;AAHA,KAAf;AAMAW,IAAAA,QAAQ,GAAGf,KAAX;;AACA,QAAIgB,QAAJ,EAAc;AACZL,MAAAA,cAAc,CAACK,QAAD,CAAd;AACD;AACF,GAdD;;AAgBA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAUnB,KAAV,EAAoB;AACzCA,IAAAA,KAAK,CAACoB,EAAN,CAAS;AACPC,MAAAA,SAAS,EAAE,mBAAUC,CAAV,EAAa;AACtBvB,QAAAA,gBAAgB,CAACuB,CAAC,CAACC,MAAH,CAAhB;AACD,OAHM;AAIPC,MAAAA,QAAQ,EAAE,kBAAUF,CAAV,EAAa;AACrBX,QAAAA,cAAc,CAACW,CAAC,CAACC,MAAH,CAAd;AACD;AANM,KAAT;AAQD,GATD;;AAUA,sBACA,oBAAC,OAAD;AACI,IAAA,IAAI,EAAE1B,OADV;AAEI,IAAA,KAAK,EAAED,YAAY,CAAC6B,UAFxB;AAGI,IAAA,aAAa,EAAEP,cAHnB;AAII,IAAA,GAAG,EAAER,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAQD","sourcesContent":["import React from \"react\";\nimport { useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport { GeoJSON } from \"react-leaflet\";\nimport * as myConstClass from \"./constants.js\";\nimport nations from \"../data/nations.json\";\n\nexport default function PeoplesMapStart() {\n\n  const HighlightFeature = (layer) => {\n    \n      layer.setStyle({\n        weight: 1.5,\n        dashArray: \"\",\n        fillOpacity: 0.8,\n      });\n      if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n        layer.bringToFront();\n      }\n    };\n\n  const geoJsonRef = useRef();\n\n  const ResetHighlight = (layer) => {\n    \n      geoJsonRef.current.resetStyle(layer);\n\n  };\n\n  const Select = (layer) => {\n    if (selected !== null) {\n      var previous = selected;\n    }\n    layer.setStyle({\n      weight: 3,\n      color: \"white\",\n      fillOpacity: 1,\n    });\n\n    selected = layer;\n    if (previous) {\n      ResetHighlight(previous);\n    }\n  };\n\n  const onEachFeatureF = (feature, layer) => {\n    layer.on({\n      mouseover: function (e) {\n        HighlightFeature(e.target);\n      },\n      mouseout: function (e) {\n        ResetHighlight(e.target);\n      },\n    });\n  };\n  return (\n  <GeoJSON\n      data={nations}\n      style={myConstClass.subteStyle}\n      onEachFeature={onEachFeatureF}\n      ref={geoJsonRef}\n    />\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}